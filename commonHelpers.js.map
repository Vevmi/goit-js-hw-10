{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\nlet userDate;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    userDate = selectedDates[0];\n    if (userDate < Date.now()) {\n      startButtonElem.disabled = true;\n      iziToast.error({\n        message: 'Please choose a date in the future',\n      });\n    } else startButtonElem.disabled = false;\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nconst startButtonElem = document.querySelector('[data-start]');\nstartButtonElem.addEventListener('click', e => {\n  startButtonElem.disabled = true;\n  const id = setInterval(() => {\n    const currentTime = Date.now();\n    const chosenDate = userDate - currentTime;\n    const timeObject = convertMs(chosenDate);\n    renderTime(timeObject);\n    if (chosenDate <= 1000) clearInterval(id);\n  }, 1000);\n});\nfunction renderTime({ days, hours, minutes, seconds }) {\n  const fieldElem = document.querySelectorAll('.field');\n  fieldElem[0].firstElementChild.textContent = padStart(days);\n  fieldElem[1].firstElementChild.textContent = padStart(hours);\n  fieldElem[2].firstElementChild.textContent = padStart(minutes);\n  fieldElem[3].firstElementChild.textContent = padStart(seconds);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction padStart(num) {\n  return num.toString().padStart(2, '0');\n}\n"],"names":["userDate","options","selectedDates","startButtonElem","iziToast","flatpickr","e","id","currentTime","chosenDate","timeObject","convertMs","renderTime","days","hours","minutes","seconds","fieldElem","padStart","ms","num"],"mappings":"2GASA,IAAIA,EACJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAC5BF,EAAWE,EAAc,CAAC,EACtBF,EAAW,KAAK,OAClBG,EAAgB,SAAW,GAC3BC,EAAS,MAAM,CACb,QAAS,oCACjB,CAAO,GACID,EAAgB,SAAW,EACnC,CACH,EAEAE,EAAU,mBAAoBJ,CAAO,EAErC,MAAME,EAAkB,SAAS,cAAc,cAAc,EAC7DA,EAAgB,iBAAiB,QAASG,GAAK,CAC7CH,EAAgB,SAAW,GAC3B,MAAMI,EAAK,YAAY,IAAM,CAC3B,MAAMC,EAAc,KAAK,MACnBC,EAAaT,EAAWQ,EACxBE,EAAaC,EAAUF,CAAU,EACvCG,EAAWF,CAAU,EACjBD,GAAc,KAAM,cAAcF,CAAE,CACzC,EAAE,GAAI,CACT,CAAC,EACD,SAASK,EAAW,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACrD,MAAMC,EAAY,SAAS,iBAAiB,QAAQ,EACpDA,EAAU,CAAC,EAAE,kBAAkB,YAAcC,EAASL,CAAI,EAC1DI,EAAU,CAAC,EAAE,kBAAkB,YAAcC,EAASJ,CAAK,EAC3DG,EAAU,CAAC,EAAE,kBAAkB,YAAcC,EAASH,CAAO,EAC7DE,EAAU,CAAC,EAAE,kBAAkB,YAAcC,EAASF,CAAO,CAC/D,CAEA,SAASL,EAAUQ,EAAI,CAQrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAASE,EAAK,CACrB,OAAOA,EAAI,SAAU,EAAC,SAAS,EAAG,GAAG,CACvC"}